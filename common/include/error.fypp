#!-------------------------------------------------------------------------------------------------!
#!  DFTB+: general package for performing fast atomistic simulations                               !
#!  Copyright (C) 2006 - 2024  DFTB+ developers group                                              !
#!                                                                                                 !
#!  See the LICENSE file for terms of usage and distribution.                                      !
#!-------------------------------------------------------------------------------------------------!

#:mute
#:if not defined("_ERROR_FYPP_")
#:set _ERROR_FYPP_


#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#! Error string handling wrappers for returns from routines
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


#! Macro to return an error flag if return variable available or throw
#! an error and shut down otherwise
#:def ERROR_HANDLING(errVar, errNumber, msg)
  block
    use common_accuracy, only : lc
    use common_message
    !> Error handling string
    character(lc) :: stringTmp

    write(stringTmp,"(A)")${msg}$
    if (present(${errVar}$)) then
      ${errVar}$ = ${errNumber}$
      call warning(stringTmp)
      return
    else
      call error(stringTmp)
    end if
  end block
#:enddef ERROR_HANDLING


#! Propagation of error handling, for now it just returns when in error
#:def HANDLE_ERROR(errVar)
  if (present(${errVar}$)) then
    if (${errVar}$ /= 0) then
      return
    end if
  end if
#:enddef


#:endif
#:endmute
