name: CI
on: [push, pull_request]

env:
  CI: "ON"
  BUILD_DIR: _build
  INSTALL_DIR: _install

jobs:

  gcc-build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        config: [Debug]
        version: [13]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install GCC (Linux)
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y gcc-${{ matrix.version}} gfortran-${{ matrix.version }}
        sudo update-alternatives \
          --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.version }} 100 \
          --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.version }} \
          --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.version }}

    - name: Set Compiler
      run: |
        echo "FC=gfortran" >> $GITHUB_ENV
        echo "CC=gcc" >> $GITHUB_ENV

    - name: Compile and Install libXC
      run: |
        git clone https://gitlab.com/libxc/libxc.git
        cd libxc/
        git checkout 6.2.2
        cmake -DCMAKE_INSTALL_PREFIX=${PWD}/${BUILD_DIR}/${INSTALL_DIR} -DENABLE_FORTRAN=True -B ${BUILD_DIR} .
        cd ${BUILD_DIR}
        make -j 2
        make install
        cd ../../

    - name: Set libXC search path
      run: |
        echo "CMAKE_PREFIX_PATH=./libxc/${BUILD_DIR}/${INSTALL_DIR}/" >> $GITHUB_ENV

    - name: Install requirements (pip)
      run: |
        pip3 install --upgrade pip
        pip3 install wheel
        pip3 install cmake fypp numpy scipy

    - name: Configure build
      run: |
        cmake -B ${BUILD_DIR} -DCMAKE_INSTALL_PREFIX=${PWD}/${BUILD_DIR}/${INSTALL_DIR} -DCMAKE_BUILD_TYPE=Debug .

    - name: Build project
      run: cmake --build ${BUILD_DIR}

    - name: Run regression tests
      run: |
        pushd ${BUILD_DIR}
        ctest -j 2 --output-on-failure
        popd

    - name: Install project
      run: |
        cmake --install ${BUILD_DIR}

  intel-build:

    strategy:
      matrix:
        os: [ubuntu-latest]
        config: [RelWithDebInfo]

    runs-on: ${{ matrix.os }}

    env:
      FC: ifx
      CC: icx
      CMAKE_OPTIONS: >-
        -DCMAKE_BUILD_TYPE=${{ matrix.config }}
        -DFYPP_FLAGS='-DTRAVIS'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Setup Intel compiler
      uses: rscohn2/setup-oneapi@v0
      with:
        components: |
          icx@2024.0.0
          ifx@2024.0.0
          mkl@2024.0.0

    - name: Setup Intel environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> ${GITHUB_ENV}
        echo "FC=ifx" >> ${GITHUB_ENV}
        echo "CC=icx" >> ${GITHUB_ENV}

    - name: Compile and install libXC
      run: |
        git clone https://gitlab.com/libxc/libxc.git
        cd libxc/
        git checkout 6.2.2
        cmake -DCMAKE_INSTALL_PREFIX=${PWD}/${BUILD_DIR}/${INSTALL_DIR} -DENABLE_FORTRAN=True -B ${BUILD_DIR} .
        cd ${BUILD_DIR}
        make -j 2
        make install
        cd ../../

    - name: Set libXC search path
      run: |
        echo "CMAKE_PREFIX_PATH=./libxc/${BUILD_DIR}/${INSTALL_DIR}/" >> $GITHUB_ENV

    - name: Install requirements (pip)
      run: |
        pip3 install --upgrade pip
        pip3 install wheel
        pip3 install cmake fypp numpy scipy

    - name: Set extra CMake flags (Linux)
      run: |
        echo "CMAKE_OPTIONS=${CMAKE_OPTIONS}" >> $GITHUB_ENV

    - name: Configure build
      run: |
        cmake -DCMAKE_INSTALL_PREFIX=${PWD}/${BUILD_DIR}/${INSTALL_DIR} -B ${BUILD_DIR} .

    - name: Build project
      run: cmake --build ${BUILD_DIR}

    - name: Run regression tests
      run: |
        pushd ${BUILD_DIR}
        ctest -j 2 --output-on-failure
        popd

    - name: Install project
      run: |
        cmake --install ${BUILD_DIR}
